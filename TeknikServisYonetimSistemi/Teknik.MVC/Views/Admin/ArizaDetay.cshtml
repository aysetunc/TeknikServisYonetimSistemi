@model ArizaViewModel
@{
    ViewBag.Title = "Arıza Detayı";
    Layout = "~/Views/Shared/_mainLayout.cshtml";
}
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBFkpD7TEVxSOmv2IGW4Cy9T_kYrHaeAHw&callback=init" type="text/javascript"></script>
<script src="~/Scripts/ckeditor/ckeditor.js"></script>
@{Html.RenderAction("AdminMenu", "Admin"); }
<div class="container">
    <h3 class="text-center">Arıza Ekle</h3>
    <div class="col-md-6">
        @Html.ValidationSummary()
        @using (Html.BeginForm("ArizaDuzenle", "Admin", FormMethod.Post, new
        {
            @class = "form-horizontal",
            enctype = "multipart/form-data"
        }))
        {
            <div class="form-group">
                @Html.LabelFor(x => x.Baslik, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(x => x.Baslik, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Aciklama, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextAreaFor(x => x.Aciklama, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Enlem, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(x => x.Enlem, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Boylam, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(x => x.Boylam, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.Adres, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.TextBoxFor(x => x.Adres, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <label for="galeri" class="control-label">Fotoğraflar</label>
                <div class="col-sm-10">
                    @Html.TextBoxFor(x => x.Dosyalar, new { multiple = "multiple", @class = "form-control", type = "file" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.MarkaID, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.DropDownListFor(x => x.MarkaID, (List<SelectListItem>)ViewBag.markalari, new { @class = "form-control markaliste" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.ModelID, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.DropDownListFor(x => x.ModelID, (List<SelectListItem>)ViewBag.modelleri, new { @class = "form-control modelliste" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.TeknikerID, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.DropDownListFor(x => x.TeknikerID, (List<SelectListItem>)ViewBag.teknikerler, new { @class = "form-control teknikerliste" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.OnaylandiMi, new { @class = "col-sm-2 control-label" })
                <div class="col-sm-10">
                    @Html.CheckBoxFor(x => x.OnaylandiMi)
                </div>
            </div>
            <div class="form-group">
                <div class="col-sm-offset-2 col-sm-10">
                    <button type="submit" class="btn btn-success">Arızayı Teknisyene Gönder</button>
                </div>
            </div>
        }
    </div>
    <div class="col-md-6">
        <div class="row">
            <div id="harita"></div>
            <input type="button" id="btnkonum" value="Konum Getir" class="btn btn-primary" />
        </div>
        <div class="row">
            @if (Model.FotografYollari.Count == 0)
            {
                <h3 class="text-center text-danger">
                    Galeride Fotoğraf Yok
                </h3>
            }
            else
            {
                <div class="center-block">
                    @foreach (var path in Model.FotografYollari)
                    {
                        <div class="form-group">
                            <div class="col-md-6 col-sm-6">
                                <label class="btn btn-primary">
                                    <img src="~/@path" alt="..." class="img-thumbnail img-check">
                                    <input type="checkbox" name="chk1" id="item4" value="val1" class="hidden" autocomplete="off">
                                </label>
                            </div>
                        </div>
                    }
                </div>
                    <input type="button" class="btn btn-block btn-warning" value="Seçili Resimleri Sil" id="btnresimsil" />
            }
            @if (Model.Bilgilendirmeleri.Count > 0)
            {
                <div class="center-block warning">
                    <ul class="list-group">
                        @for (int i = 0; i < Model.Bilgilendirmeleri.Count; i++)
                        {
                            var userName = MembershipTools.NewUserManager().FindById(Model.Bilgilendirmeleri[i].YoneticiID).UserName;
                            <li class="list-group-item">
                                <span class="@(Model.Bilgilendirmeleri[i].OlumluMu?"success":"danger")">
                                    @Model.Bilgilendirmeleri[i].Aciklama <br />Yazan: @userName<br />
                                    @($"{Model.Bilgilendirmeleri[i].AciklamaZamani:dd-MM-yy hh:mm}")
                                </span>
                            </li>
                        }
                    </ul>
                </div>
            }
        </div>

    </div>
</div>

<script src="~/Scripts/jquery-3.1.1.js"></script>

<script>
    $(".markaliste").change(function () {
        modelleriYukle();
    });
    $("#btnkonum").click(function () {
        navigator.geolocation.getCurrentPosition(koordinat);
    });
    function koordinat(position) {
        console.log(position)
        var enlemboylam = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
        var ayar = {
            center: enlemboylam,
            zoom: 15,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            mapTypeControl: true,
            navigationControlOptions: { style: google.maps.NavigationControlStyle.SMALL }
        };
        var haritatutucu = document.getElementById("harita");
        var googleHarita = new google.maps.Map(haritatutucu, ayar);
        var imlec = new google.maps.Marker({
            //position: enlemboylam,
            map: googleHarita,
            title: "Konumunuz"
        });
        googleHarita.addListener("click", function () {
            imlec.setMap(null);
        });
        googleHarita.addListener("click", function (e) {
            placeMarkerAndPanTo(e.latLng, googleHarita);
        });
        function placeMarkerAndPanTo(latLng, map) {
            imlec = new google.maps.Marker({
                position: latLng,
                map: map
            });
            $("#Enlem").val(latLng.lat());
            $("#Boylam").val(latLng.lng());
        };
    };
    function modelleriYukle() {
        var markaid = $(".markaliste option:selected").val();
        console.log(markaid);
        $.ajax({
            url: '@Url.Action("modelDoldur", "Admin")?markaid=' + markaid,
            type: "POST",
            success: function (data) {
                if (data.success == true) {
                    //console.log(data.message);
                    $("#ModelID").find('option').remove();
                    var modeller = data.message;
                    $.each(modeller, function (key, value) {

                        //console.log(value);
                        var option = document.createElement("option");
                        //<option value="2">Casper</option>
                        $(option).attr("value", value.Value).text(value.Text).appendTo($("#ModelID"));
                    })
                }
            },
            error: function (err) {
                console.log(err);
            }
        });
    };
    var init = function () {
        navigator.geolocation.getCurrentPosition(koordinat);
        modelleriYukle();
    };
    $(document).ready(function (e) {
        $(".img-check").click(function () {
            $(this).toggleClass("check");
        });
    });
    var resimler = {};
    $("#btnresimsil").click(function () {
        resimler = $(".check");
        var yollar = [];
        for (var i = 0; i < resimler.length; i++) {
            yollar.push($(resimler[i]).attr("src"));
        }
        var postData = {
            values: yollar
        };
        $.ajax({
            url: '@Url.Action("Resimsil","Admin")',
            data: postData,
            dataType: 'JSON',
            type: 'POST',
            success: function (data) {
                window.location.href = '@Url.Action("ArizaDetay","Admin",new { id=Model.ID})';
                alert(data.message);
            },
            error: function (err) {
                alert("errör");
                console.log(err);
            }
        })
    });
    CKEDITOR.replace("Aciklama", {
        uiColor: '#fc7f7f'
    });
</script>
<style>
    #harita {
        width: 100%;
        height: 400px;
        background-color: #fc7f7f;
    }
     .check {
        opacity: 0.5;
        color: #996;
    }
</style>

